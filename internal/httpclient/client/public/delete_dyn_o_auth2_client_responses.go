// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ory/hydra/internal/httpclient/models"
)

// DeleteDynOAuth2ClientReader is a Reader for the DeleteDynOAuth2Client structure.
type DeleteDynOAuth2ClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDynOAuth2ClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteDynOAuth2ClientNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteDynOAuth2ClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDynOAuth2ClientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDynOAuth2ClientNoContent creates a DeleteDynOAuth2ClientNoContent with default headers values
func NewDeleteDynOAuth2ClientNoContent() *DeleteDynOAuth2ClientNoContent {
	return &DeleteDynOAuth2ClientNoContent{}
}

/* DeleteDynOAuth2ClientNoContent describes a response with status code 204, with default header values.

 Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
typically 201.
*/
type DeleteDynOAuth2ClientNoContent struct {
}

func (o *DeleteDynOAuth2ClientNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dyn-clients/{id}][%d] deleteDynOAuth2ClientNoContent ", 204)
}

func (o *DeleteDynOAuth2ClientNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDynOAuth2ClientNotFound creates a DeleteDynOAuth2ClientNotFound with default headers values
func NewDeleteDynOAuth2ClientNotFound() *DeleteDynOAuth2ClientNotFound {
	return &DeleteDynOAuth2ClientNotFound{}
}

/* DeleteDynOAuth2ClientNotFound describes a response with status code 404, with default header values.

genericError
*/
type DeleteDynOAuth2ClientNotFound struct {
	Payload *models.GenericError
}

func (o *DeleteDynOAuth2ClientNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dyn-clients/{id}][%d] deleteDynOAuth2ClientNotFound  %+v", 404, o.Payload)
}
func (o *DeleteDynOAuth2ClientNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *DeleteDynOAuth2ClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDynOAuth2ClientInternalServerError creates a DeleteDynOAuth2ClientInternalServerError with default headers values
func NewDeleteDynOAuth2ClientInternalServerError() *DeleteDynOAuth2ClientInternalServerError {
	return &DeleteDynOAuth2ClientInternalServerError{}
}

/* DeleteDynOAuth2ClientInternalServerError describes a response with status code 500, with default header values.

genericError
*/
type DeleteDynOAuth2ClientInternalServerError struct {
	Payload *models.GenericError
}

func (o *DeleteDynOAuth2ClientInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dyn-clients/{id}][%d] deleteDynOAuth2ClientInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteDynOAuth2ClientInternalServerError) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *DeleteDynOAuth2ClientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
